{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://packageurl.org/schemas/purl-test.schema-1.0.json",
  "title": "PURL test definition",
  "description": "Schema for Package-URL building and parsing tests with input and expected output.",
  "type": "object",
  "additionalProperties": false,
  "definitions": {
    "purl_components": {
      "title": "PURL decoded components",
      "description": "Individual decoded PURL components to use as a test input or expectation.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "title": "PURL type",
          "description": "Package-URL type component.",
          "type": "string"
        },
        "namespace": {
          "title": "PURL namespace",
          "description": "Package-URL namespace decoded component.",
          "type": "string"
        },
        "name": {
          "title": "PURL name",
          "description": "Package-URL name decoded component.",
          "type": "string"
        },
        "version": {
          "title": "PURL version",
          "description": "Package-URL version decoded component.",
          "type": "string"
        },
        "qualifiers": {
          "title": "PURL qualifiers",
          "description": "Package-URL qualifiers decoded component as an object.",
          "type": "object"
        },
        "subpath": {
          "title": "PURL subpath",
          "description": "Package-URL subpath decoded component.",
          "type": "string"
        }
      }
    },
    "description": {
      "title": "Test description",
      "description": "An optional description for this test.",
      "type": "string"
    },
    "test_group": {
      "title": "Test group",
      "description": "The group of this test like 'base' or 'advanced'.",
      "type": "string",
      "enum": [
        "base",
        "advanced"
      ],
      "meta:enum": {
        "base": "Test group for base conformance tests for PURL building and parsing.",
        "advanced": "Test group for advanced tests to support flexible PURL building and parsing."
      }
    },
    "expected_failure": {
      "title": "Expected failure",
      "description": "true if this test input is expected to fail to be processed.",
      "type": "boolean",
      "default": false
    },
    "expected_failure_reason": {
      "title": "Expected failure reason",
      "description": "The reason why this is is expected to fail if expected_failure is true.",
      "type": "string"
    },
    "parse_test": {
      "title": "PURL parsing test",
      "description": "A PURL parsing test from a canonical (or not) string input.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "description",
        "test_group",
        "test_type",
        "input"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "test_group": {
          "$ref": "#/definitions/test_group"
        },
        "test_type": {
          "const": "parse"
        },
        "input": {
          "title": "Input test PURL",
          "type": "string",
          "description": "A PURL string to use as a test input (canonical or not)."
        },
        "expected_output": {
          "title": "Expected output decoded PURL components",
          "description": "Test output as an object decoded PURL components, unless expected_failure.",
          "$ref": "#/definitions/purl_components"
        },
        "expected_failure": {
          "$ref": "#/definitions/expected_failure"
        },
        "expected_failure_reason": {
          "$ref": "#/definitions/expected_failure_reason"
        }
      },
      "if": {
        "properties": {
          "expected_failure": {
            "const": true
          }
        },
        "required": [
          "expected_failure"
        ]
      },
      "then": {
        "required": [
          "expected_failure_reason"
        ],
        "not": {
          "required": [
            "expected_output"
          ]
        }
      },
      "else": {
        "required": [
          "expected_output"
        ],
        "not": {
          "required": [
            "expected_failure_reason"
          ]
        }
      }
    },
    "roundtrip_test": {
      "title": "PURL roundtrip test",
      "description": "A PURL  parsing then building back from a canonical string input.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "description",
        "test_group",
        "test_type",
        "input"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "test_group": {
          "$ref": "#/definitions/test_group"
        },
        "test_type": {
          "const": "roundtrip"
        },
        "input": {
          "title": "Input test PURL",
          "type": "string",
          "description": "A PURL string to use as a test input (canonical or not)."
        },
        "expected_output": {
          "type": "string",
          "description": "A canonical PURL string to use as a test expected output."
        },
        "expected_failure": {
          "$ref": "#/definitions/expected_failure"
        },
        "expected_failure_reason": {
          "$ref": "#/definitions/expected_failure_reason"
        }
      },
      "if": {
        "properties": {
          "expected_failure": {
            "const": true
          }
        },
        "required": [
          "expected_failure"
        ]
      },
      "then": {
        "required": [
          "expected_failure_reason"
        ],
        "not": {
          "required": [
            "expected_output"
          ]
        }
      },
      "else": {
        "required": [
          "expected_output"
        ],
        "not": {
          "required": [
            "expected_failure_reason"
          ]
        }
      }
    },
    "build_test": {
      "title": "PURL building test",
      "description": "A PURL building test from decoded components to a canonical PURL string.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "description",
        "test_group",
        "test_type",
        "input"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "test_group": {
          "$ref": "#/definitions/test_group"
        },
        "test_type": {
          "const": "build"
        },
        "input": {
          "title": "Input test PURL components",
          "description": "An object of decoded PURL components to use as a test input.",
          "$ref": "#/definitions/purl_components"
        },
        "expected_output": {
          "title": "Expected output canonical PURL string",
          "description": "Test output as a canonical PURL string, unless expected_failure.",
          "type": "string"
        },
        "expected_failure": {
          "$ref": "#/definitions/expected_failure"
        },
        "expected_failure_reason": {
          "$ref": "#/definitions/expected_failure_reason"
        }
      },
      "if": {
        "properties": {
          "expected_failure": {
            "const": true
          }
        },
        "required": [
          "expected_failure"
        ]
      },
      "then": {
        "required": [
          "expected_failure_reason"
        ],
        "not": {
          "required": [
            "expected_output"
          ]
        }
      },
      "else": {
        "required": [
          "expected_output"
        ],
        "not": {
          "required": [
            "expected_failure_reason"
          ]
        }
      }
    }
  },
  "properties": {
    "$schema": {
      "title": "JSON schema",
      "description": "Contains the URL of the JSON schema for Package-URL tests.",
      "constant": "https://packageurl.org/schemas/purl-test.schema-1.0.json",
      "format": "uri"
    },
    "tests": {
      "title": "Test suite",
      "description": "A list of Package-URL build and parse tests.",
      "additionalItems": false,
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/build_test"
          },
          {
            "$ref": "#/definitions/parse_test"
          }
        ]
      }
    }
  }
}
